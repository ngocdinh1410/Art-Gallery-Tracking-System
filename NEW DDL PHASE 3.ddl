-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2019-11-21 17:52:30 EST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE artist (
    artist_id             CHAR(10 CHAR) NOT NULL,
    artist_first_name     CHAR(20 CHAR),
    artist_last_name      CHAR(20 CHAR),
    artist_street         CHAR(20 CHAR),
    artist_city           CHAR(20 CHAR),
    artist_state          CHAR(2 CHAR),
    artist_zip            CHAR(5 CHAR),
    artist_phone_number   CHAR(12 CHAR)
);

ALTER TABLE artist ADD CONSTRAINT artist_pk PRIMARY KEY ( artist_id );

CREATE TABLE artist_artwork (
    artist_artist_id        CHAR(10 CHAR) NOT NULL,
    artwork_artwork_id      CHAR(10 CHAR) NOT NULL,
    artwork_date_return_d   DATE
);

ALTER TABLE artist_artwork ADD CONSTRAINT artist_artwork_pk PRIMARY KEY ( artwork_artwork_id );

CREATE TABLE artist_sale (
    sale_sale_number   CHAR(10 CHAR) NOT NULL,
    artist_artist_id   CHAR(10 CHAR) NOT NULL
);

ALTER TABLE artist_sale ADD CONSTRAINT artist_sale_pk PRIMARY KEY ( sale_sale_number );

CREATE TABLE artwork (
    artwork_id               CHAR(10 CHAR) NOT NULL,
    artwork_title            CHAR(30 CHAR),
    artwork_year_completed   CHAR(4),
    artwork_asking_price     CHAR(10 CHAR),
    artwork_status           CHAR(20 CHAR),
    artwork_date_listed      DATE,
    type                     CHAR(20 CHAR),
    medium                   CHAR(20 CHAR),
    "Size"                   CHAR(20 CHAR)
);

ALTER TABLE artwork ADD CONSTRAINT artwork_pk PRIMARY KEY ( artwork_id );

CREATE TABLE collector (
    collector_id             CHAR(10 CHAR) NOT NULL,
    collector_first_name     CHAR(20 CHAR),
    collector_last_name      CHAR(20 CHAR),
    collector_street         CHAR(20 CHAR),
    collector_city           CHAR(20 CHAR),
    collector_state          CHAR(2 CHAR),
    collector_zip            CHAR(5 CHAR),
    collector_phone_number   CHAR(12 CHAR)
);

ALTER TABLE collector ADD CONSTRAINT collector_pk PRIMARY KEY ( collector_id );

CREATE TABLE collector_artwork (
    collector_collector_id   CHAR(10 CHAR) NOT NULL,
    artwork_artwork_id       CHAR(10 CHAR) NOT NULL
);

ALTER TABLE collector_artwork ADD CONSTRAINT collector_artwork_pk PRIMARY KEY ( artwork_artwork_id );

CREATE TABLE collector_sale (
    collector_collector_id   CHAR(10 CHAR) NOT NULL,
    sale_sale_number         CHAR(10 CHAR) NOT NULL
);

ALTER TABLE collector_sale ADD CONSTRAINT collector_sale_pk PRIMARY KEY ( sale_sale_number );

CREATE TABLE customer (
    customer_id             CHAR(10 CHAR) NOT NULL,
    customer_first_name     CHAR(20 CHAR),
    customer_last_name      CHAR(20 CHAR),
    customer_street         CHAR(20 CHAR),
    customer_city           CHAR(20 CHAR),
    customer_state          CHAR(2 CHAR),
    customer_zip            CHAR(5 CHAR),
    customer_phone_number   CHAR(12 CHAR),
    customer_type           CHAR(20 CHAR)
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( customer_id );

CREATE TABLE customer_sale (
    customer_customer_id   CHAR(10 CHAR) NOT NULL,
    sale_sale_number       CHAR(10 CHAR) NOT NULL
);

ALTER TABLE customer_sale ADD CONSTRAINT customer_sale_pk PRIMARY KEY ( sale_sale_number );

CREATE TABLE sale (
    sale_number          CHAR(10 CHAR) NOT NULL,
    artwork_artwork_id   CHAR(10 CHAR) NOT NULL,
    sale_date            CHAR(2 CHAR),
    sale_month           CHAR(3 CHAR),
    sale_year            CHAR(4 CHAR),
    sale_price           CHAR(10 CHAR),
    sale_tax             CHAR(10 CHAR)
);

CREATE UNIQUE INDEX sale__idx ON
    sale (
        artwork_artwork_id
    ASC );

ALTER TABLE sale ADD CONSTRAINT sale_pk PRIMARY KEY ( sale_number );

CREATE TABLE salesperson (
    salesperson_id           CHAR(10 CHAR) NOT NULL,
    salesperson_first_name   CHAR(20 CHAR),
    salesperson_last_name    CHAR(20 CHAR),
    salesperson_street       CHAR(20 CHAR),
    salesperson_city         CHAR(20 CHAR),
    salesperson_state        CHAR(2 CHAR),
    salesperson_zip          CHAR(5 CHAR)
);

ALTER TABLE salesperson ADD CONSTRAINT salesperson_pk PRIMARY KEY ( salesperson_id );

CREATE TABLE salesperson_sale (
    salesperson_salesperson_id   CHAR(10 CHAR) NOT NULL,
    sale_sale_number             CHAR(10 CHAR) NOT NULL
);

ALTER TABLE salesperson_sale ADD CONSTRAINT salesperson_sale_pk PRIMARY KEY ( sale_sale_number );

CREATE TABLE show (
    show_id          CHAR(10 CHAR) NOT NULL,
    show_title       CHAR(10 CHAR),
    show_open_date   DATE,
    show_end_date    DATE,
    show_theme       CHAR(20 CHAR)
);

ALTER TABLE show ADD CONSTRAINT show_pk PRIMARY KEY ( show_id );

CREATE TABLE show_artwork (
    show_show_id           CHAR(10 CHAR) NOT NULL,
    artwork_artwork_id     CHAR(10 CHAR) NOT NULL,
    artwork_date_shown_d   DATE
);

ALTER TABLE show_artwork ADD CONSTRAINT show_artwork_pk PRIMARY KEY ( show_show_id,
                                                                      artwork_artwork_id );

ALTER TABLE artist_artwork
    ADD CONSTRAINT artist_artwork_artist_fk FOREIGN KEY ( artist_artist_id )
        REFERENCES artist ( artist_id );

ALTER TABLE artist_artwork
    ADD CONSTRAINT artist_artwork_artwork_fk FOREIGN KEY ( artwork_artwork_id )
        REFERENCES artwork ( artwork_id );

ALTER TABLE artist_sale
    ADD CONSTRAINT artist_sale_artist_fk FOREIGN KEY ( artist_artist_id )
        REFERENCES artist ( artist_id );

ALTER TABLE artist_sale
    ADD CONSTRAINT artist_sale_sale_fk FOREIGN KEY ( sale_sale_number )
        REFERENCES sale ( sale_number );

ALTER TABLE collector_artwork
    ADD CONSTRAINT collector_artwork_artwork_fk FOREIGN KEY ( artwork_artwork_id )
        REFERENCES artwork ( artwork_id );

ALTER TABLE collector_artwork
    ADD CONSTRAINT collector_artwork_collector_fk FOREIGN KEY ( collector_collector_id )
        REFERENCES collector ( collector_id );

ALTER TABLE collector_sale
    ADD CONSTRAINT collector_sale_collector_fk FOREIGN KEY ( collector_collector_id )
        REFERENCES collector ( collector_id );

ALTER TABLE collector_sale
    ADD CONSTRAINT collector_sale_sale_fk FOREIGN KEY ( sale_sale_number )
        REFERENCES sale ( sale_number );

ALTER TABLE customer_sale
    ADD CONSTRAINT customer_sale_customer_fk FOREIGN KEY ( customer_customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE customer_sale
    ADD CONSTRAINT customer_sale_sale_fk FOREIGN KEY ( sale_sale_number )
        REFERENCES sale ( sale_number );

ALTER TABLE sale
    ADD CONSTRAINT sale_artwork_fk FOREIGN KEY ( artwork_artwork_id )
        REFERENCES artwork ( artwork_id );

ALTER TABLE salesperson_sale
    ADD CONSTRAINT salesperson_sale_sale_fk FOREIGN KEY ( sale_sale_number )
        REFERENCES sale ( sale_number );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE salesperson_sale
    ADD CONSTRAINT salesperson_sale_salesperson_fk FOREIGN KEY ( salesperson_salesperson_id )
        REFERENCES salesperson ( salesperson_id );

ALTER TABLE show_artwork
    ADD CONSTRAINT show_artwork_artwork_fk FOREIGN KEY ( artwork_artwork_id )
        REFERENCES artwork ( artwork_id );

ALTER TABLE show_artwork
    ADD CONSTRAINT show_artwork_show_fk FOREIGN KEY ( show_show_id )
        REFERENCES show ( show_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            14
-- CREATE INDEX                             1
-- ALTER TABLE                             29
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
